generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Meal {
  id        String   @id @default(cuid())
  userId    String
  protein   Int
  calories  Int
  carbs     Int
  createdAt DateTime @default(now())
  mismatch  Boolean  @default(false)
  fat       Int
  name      String
  User      User     @relation(fields: [userId], references: [id])
}

model User {
  id                String          @id
  email             String          @unique
  password          String
  createdAt         DateTime        @default(now())
  weeklyGoal        Int             @default(20000)
  weeklyCalorieGoal Int             @default(14000)
  carbsTarget       Int             @default(1750)
  fatTarget         Int             @default(500)
  proteinTarget     Int             @default(1050)
  Meal              Meal[]
  Workout           Workout[]
  mismatch          MacroMismatch[]
}

model Workout {
  id        String   @id
  userId    String
  createdAt DateTime @default(now())
  date      DateTime @default(now())
  exercise  String
  sets      Json
  User      User     @relation(fields: [userId], references: [id])
}

model MacroMismatch {
  id           String   @id @default(uuid())
  userId       String
  date         DateTime
  calorieDelta Int // positive = over target, negative = under
  proteinDelta Int
  carbsDelta   Int
  fatDelta     Int
  resolved     Boolean  @default(false)
  emailed      Boolean  @default(false)
  createdAt    DateTime @default(now())
  User         User     @relation(fields: [userId], references: [id])
}
